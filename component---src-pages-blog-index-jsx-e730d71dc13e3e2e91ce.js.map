{"version":3,"sources":["webpack:///./src/components/PostCard/index.jsx","webpack:///./src/pages/blog/index.jsx"],"names":["PostCard","props","data","node","frontmatter","tags","className","style","postCard","to","Utils","resolvePageUrl","path","postCardText","backgroundColor","color","title","dateHolder","date","moment","format","mrTp20","excerpt","map","tag","key","deckDeckGoHighlightElement","Blog","description","gutter","allMarkdownRemark","edges","val","xs","sm","md","lg"],"mappings":"4FAAA,gHAyCeA,IAlCE,SAACC,GAChB,MAIIA,EAHFC,KACEC,KAAQC,mBAFZ,MAE0B,CAAEC,KAAM,IAFlC,EAMA,OACE,yBAAKC,UAAWC,IAAMC,UACpB,kBAAC,OAAD,CAAMC,GAAIC,IAAMC,eAAeP,EAAYQ,OACzC,yBACEN,UAAWC,IAAMM,aACjBN,MAAO,CACLO,gBAAiBT,OAAKD,EAAYC,KAAK,IAAIU,QAG5CX,EAAYY,MACb,0BAAMV,UAAWC,IAAMU,YACpBb,EAAYc,KAAOC,IAAOf,EAAYc,MAAME,OAAO,cAAgB,MAI1E,yBAAKd,UAAWC,IAAMc,QACpB,uBAAGf,UAAWC,IAAMe,SAAUlB,EAAYkB,SAC1C,2BACGlB,EAAYC,KAAKkB,KAAI,SAACC,GAAD,OACpB,kBAAC,OAAD,CAAMC,IAAKD,EAAKlB,UAAWC,IAAMiB,IAAKf,GAAE,SAAWe,GAAnD,IAA+DA,EAA/D,a,sMCvBZE,cAsDeC,UApDF,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAH,OACX,uBAAQI,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKU,MAAM,OAAOY,YAAY,0BAA0BhB,KAAK,SAC7D,kBAAC,IAAD,KACE,yBAAKN,UAAU,kBACb,wBAAIA,UAAU,iBAAd,SAEF,uBAAKuB,OAAQ,CAAC,GAAI,KACf3B,EAAK4B,mBACD5B,EAAK4B,kBAAkBC,MAAMR,KAAI,SAACS,EAAKP,GAAN,OAElC,uBAAKA,IAAKA,EAAKQ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,kBAAC,IAAD,CAAUlC,KAAM8B","file":"component---src-pages-blog-index-jsx-e730d71dc13e3e2e91ce.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport style from './postCard.module.less';\nimport Utils from '../../utils/pageUtils';\nimport { tags } from '../../../config';\n\nconst PostCard = (props) => {\n  const {\n    data: {\n      node: { frontmatter = { tags: [] } },\n    },\n  } = props;\n\n  return (\n    <div className={style.postCard}>\n      <Link to={Utils.resolvePageUrl(frontmatter.path)}>\n        <div\n          className={style.postCardText}\n          style={{\n            backgroundColor: tags[frontmatter.tags[0]].color,\n          }}\n        >\n          {frontmatter.title}\n          <span className={style.dateHolder}>\n            {frontmatter.date ? moment(frontmatter.date).format('YYYY/MM/DD') : ''}\n          </span>\n        </div>\n      </Link>\n      <div className={style.mrTp20}>\n        <p className={style.excerpt}>{frontmatter.excerpt}</p>\n        <p>\n          {frontmatter.tags.map((tag) => (\n            <Link key={tag} className={style.tag} to={`/tags/${tag}`}>{`#${tag} `}</Link>\n          ))}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Layout, Row, Col } from 'antd';\nimport { defineCustomElements as deckDeckGoHighlightElement } from '@deckdeckgo/highlight-code/dist/loader';\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport PostCard from '../../components/PostCard';\nimport SEO from '../../components/Seo';\n\ndeckDeckGoHighlightElement();\n\nconst Blog = ({ data }) => (\n  <Layout className=\"outerPadding\">\n    <Layout className=\"container\">\n      <Header />\n      <SEO title=\"Blog\" description=\"我是 Tiffany，雖然內向但我樂於分享交流\" path=\"blog\" />\n      <SidebarWrapper>\n        <div className=\"marginTopTitle\">\n          <h1 className=\"titleSeparate\">Blog</h1>\n        </div>\n        <Row gutter={[20, 20]}>\n          {data.allMarkdownRemark\n            && data.allMarkdownRemark.edges.map((val, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                <PostCard data={val} />\n              </Col>\n            ))}\n        </Row>\n      </SidebarWrapper>\n    </Layout>\n  </Layout>\n);\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/blog\\/.*index.md$/\"  } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            path\n            title\n            tags\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"sourceRoot":""}