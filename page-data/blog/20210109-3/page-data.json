{"componentChunkName":"component---src-templates-post-post-jsx","path":"/blog/20210109-3","result":{"data":{"markdownRemark":{"html":"<p>RESTful API 是一種設計風格，這種風格使 API 設計具有整體一致性，易於維護、擴展，並且充份利用 HTTP 協定的特點。<br>\n當有符合以下的方法去定義 API 時，可以將它稱作 Restful API。</p>\n<blockquote>\n<p>REST: Resource Representational State Transfer</p>\n</blockquote>\n<ul>\n<li>\n<p>常見的 HTTP 請求服務的 Methods：</p>\n<ul>\n<li>GET 取得</li>\n<li>POST 新增</li>\n<li>PUT 替換資源</li>\n<li>PATCH 替換資源部分內容</li>\n<li>DELETE 刪除</li>\n<li>HEAD 類似 GET，但只回傳 HTTP header</li>\n<li>OPTIONS 回傳該資源所支援的所有 HTTP 請求方法</li>\n<li>CONNECT 將連線請求轉換至 TCP/IP 隧道</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>PUT/PATCH 都可以修改，差別 PUT 傳的會整個替換掉原本的，PATCH 則會部分修改。</p>\n</blockquote>\n<deckgo-highlight-code json  terminal=\"carbon\" theme=\"monokai\" line-numbers=\"true\"  highlight-lines=\"\">\n          <code slot=\"code\">// 假設原始，要將 doors 改為 5\n{\n &quot;front_patio&quot;: true,\n &quot;back_patio&quot;: true,\n &quot;windows&quot;: 12,\n &quot;doors&quot;: 4,\n &quot;Balcony&quot;: false\n}\n// PUT 更新\n{\n &quot;front_patio&quot;: true,\n &quot;back_patio&quot;: true,\n &quot;windows&quot;: 12,\n &quot;doors&quot;: 5,\n &quot;Balcony&quot;: false\n}\n// PATCH 更新\n{\n &quot;doors&quot;: 5\n}</code>\n        </deckgo-highlight-code>\n<table>\n<thead>\n<tr>\n<th>Verb</th>\n<th>SAFE</th>\n<th>IDEMPOTENT</th>\n<th>Cacheable</th>\n<th>動作</th>\n<th>語意</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td>讀取</td>\n<td>請求所需要的資源。</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td>讀取</td>\n<td>與 GET 相同，但伺服器只傳輸 HTML 的狀態與表頭。</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>X</td>\n<td>X</td>\n<td>O</td>\n<td>新增</td>\n<td>在請求中攜帶負載，並執行特定資源的處理。</td>\n</tr>\n<tr>\n<td>PATCH</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n<td>部分更新</td>\n<td>請求更新一筆資源的部分內容，必須是存在的資源。</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>X</td>\n<td>O</td>\n<td>X</td>\n<td>完整更新</td>\n<td>請求更新一筆資源的所有內容，必須是存在的資源，資源傳遞必須完整，否則為空。</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>X</td>\n<td>O</td>\n<td>x</td>\n<td>刪除</td>\n<td>請求移除資源。</td>\n</tr>\n</tbody>\n</table>\n<p>SAFE 代表的含意為「是否安全」，所謂的安全便是「在請求的過程中，是否有任何資源的改動(新增、修改、移除)<br>\nIdempotent Methods 冪等方法 代表這筆請求就算重複操作，也會產生相同的結果。換句話說，如果在網路狀態不佳的環境，就算重複執行也不會有問題。</p>\n<ul>\n<li>\n<p>URI 由 prefix(例如 /api 或 /api/v1) + API endpoint 組成。API endpoint 的設計，幾個重要原則如下</p>\n<ul>\n<li>一般資源用複數名詞</li>\n<li>唯一資源（亦即對 client 而言只有一份的資源）用單數名詞</li>\n<li>資源的層級架構，可以適當反應在 API endpoint 設計上（路由語義化）<br>\n強調從路由結構就能看出要對什麼資料、進行什麼操作。</li>\n</ul>\n</li>\n<li>API 回傳的結果給適當的 HTTP 狀態碼（可參考 <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"_blank\" rel=\"nofollow\">Wiki: List of HTTP status codes</a>）</li>\n</ul>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://tw.twincl.com/programming/*641y\" target=\"_blank\" rel=\"nofollow\">簡明 RESTful API 設計要點</a></li>\n<li><a href=\"https://hackmd.io/@ETC/S1NH8feOW/https%3A%2F%2Fhackmd.io%2Fc%2FSk9Q5VoV4%2Fhttps%253A%252F%252Fhackmd.io%252FsaHgyr0MToW7jyQi4d0FBA\" target=\"_blank\" rel=\"nofollow\">HTTP Request Method 設計行為與分析</a></li>\n</ul>","timeToRead":3,"frontmatter":{"title":"REST / RESTful & HTTP Methods","date":"09 Jan 2021","tags":["javascript"],"path":"blog/20210109-3","excerpt":"簡易整理。"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"blog/20210110","title":"Pop Quiz","tags":["javascript"],"excerpt":"記錄踩到的陷阱題。"}}},{"node":{"frontmatter":{"path":"blog/20191107","title":"Javascript Event loop - macro task & micro task","tags":["javascript"],"excerpt":"介紹 Event loop 容易混淆的異步任務 macro task & micro task。"}}},{"node":{"frontmatter":{"path":"blog/20190906","title":"初探 Storybook","tags":["javascript"],"excerpt":"初探這款能夠在開發前端元件或是函式庫的同時，可以快速地建立元件各種操作模式或是樣式的工具。"}}},{"node":{"frontmatter":{"path":"blog/20190707","title":"JavaScript HTML5 Web Worker & CRA 使用踩雷","tags":["javascript"],"excerpt":"JavaScript 是單執行緒、單線程的程式語言，所有的程式碼片段都會在堆疊中被執行，Web worker 相當於可讓主線程開其他 thread。"}}},{"node":{"frontmatter":{"path":"blog/20190108","title":"JavaScript 認識非同步 Callback, Promise, async/await","tags":["javascript"],"excerpt":"Asynchronous 非同步的不同寫法的整理筆記。"}}},{"node":{"frontmatter":{"path":"blog/20180514","title":"JavaScript 中 this 指向","tags":["javascript"],"excerpt":"簡介 this 指向的六種情況。"}}},{"node":{"frontmatter":{"path":"blog/20180521","title":"Web 常見攻擊手法","tags":["security"],"excerpt":"擁有基本的資安觀念保護好自家資料和 user 使用環境是開發人員重要的一點。"}}},{"node":{"frontmatter":{"path":"blog/20170728","title":"WebForm 註冊 JavaScript","tags":["asp.net","javascript"],"excerpt":"動態產生JS在目前公司專案中是滿常用到的小技巧，不同的用法會產生在Web Page 的不同位置而有直譯式語言的前後順序差。"}}},{"node":{"frontmatter":{"path":"blog/20170714","title":"WebForm 使用 reCAPTCHA 驗證","tags":["asp.net"],"excerpt":"這個我不是機器人驗證一定不陌生，滿多登入畫面會看到的，剛好今天接到把圖形驗證改為 reCAPTCHA 就順手記下。"}}},{"node":{"frontmatter":{"path":"blog/20170604","title":"Web App 推播通知","tags":["asp.net"],"excerpt":"隨著行動和穿載裝置的興起，推播通知 (Push Notification) 成為維繫App用戶關係相當有力的工具"}}},{"node":{"frontmatter":{"path":"blog/20170508","title":"WebForm 圖片上傳檢查","tags":["asp.net"],"excerpt":"開放上傳有可能被傳奇怪東西的風險，只檢查所看到的副檔名，謹慎來說似乎是不夠的。"}}},{"node":{"frontmatter":{"path":"blog/20170421","title":"存取遠端 EventLog","tags":["asp.net","javascript"],"excerpt":"在公司中實作一個 Event log 的查詢工具。（之後來寫了 D3 呈現查詢異常查詢的部分）"}}},{"node":{"frontmatter":{"path":"blog/20210109","title":"Response Set-Cookie 無效","tags":["apollo"],"excerpt":"記錄個之前在和同事們弄 Side project 時犯蠢遇到的問題與解決方式。"}}},{"node":{"frontmatter":{"path":"blog/20191125","title":"初探 RxJS（下）","tags":["rxjs"],"excerpt":"簡介上次未完的 RxJS 剩餘角色，和介紹目前公司後台專案使用的 redux-observable。"}}},{"node":{"frontmatter":{"path":"blog/20200518","title":"常用 NoSQL 雲端資料庫 - Part 1 MongoDB","tags":["mongodb"],"excerpt":"簡介 Relational/NoSQL database、mongoose ORM 寫 mongo CRUD API。"}}},{"node":{"frontmatter":{"path":"blog/20190906-2","title":"React Hooks - useCallback, useMemo, useRef","tags":["reactjs"],"excerpt":"JavaScript 是單執行緒、單線程的程式語言，所有的程式碼片段都會在堆疊中被執行，Web worker 相當於可讓主線程開其他 thread。"}}},{"node":{"frontmatter":{"path":"blog/20190907","title":"GraphQL & Apollo Client","tags":["apollo"],"excerpt":"簡單介紹 React Client 端如何用 Apollo 對 GraphQL Server 做資料存取操作。"}}},{"node":{"frontmatter":{"path":"blog/20210109-2","title":"IntersectionObserver","tags":["javascript"],"excerpt":"公司專案有個日期連動的 scroll 優化試驗，原先是監聽 scroll。"}}},{"node":{"frontmatter":{"path":"blog/20200910","title":"Apollo Server 入門篇","tags":["apollo"],"excerpt":"快速複習去年分享的 GraphQL Schema 和 Client query 語法，並簡介如何以 Apollo Server 建立 GraphQL Server。"}}},{"node":{"frontmatter":{"path":"blog/20200630","title":"Express - Authentication, Authorization and Security","tags":["security","express"],"excerpt":"簡介 Express RESTful API Server 範例中 JWT 權限、授權相關。"}}},{"node":{"frontmatter":{"path":"blog/20200527","title":"常用 NoSQL 雲端資料庫 - Part 2 Firebase","tags":["firebase"],"excerpt":"簡介 Google 提供的後端服務平臺（BaaS）中的兩種 DB，realtime database 和 cloud firestore。"}}},{"node":{"frontmatter":{"path":"blog/20191017","title":"初探 RxJS（上）","tags":["rxjs"],"excerpt":"簡介相關的設計模式中的 Behavioral Pattern，再介紹 RxJS（先講 Observable）"}}},{"node":{"frontmatter":{"path":"blog/20190909","title":"Prisma - Schema, Data Model, Relations, Client","tags":["prisma"],"excerpt":"未來 Side project 可能會應用到的 SDL first 開發流程角度，簡介此可以取代傳統 ORM 的 DB toolkit。"}}}]}},"pageContext":{"postPath":"blog/20210109-3","translations":[{"hreflang":"en","path":"/blog/20210109-3"}]}},"staticQueryHashes":["4097791827"]}