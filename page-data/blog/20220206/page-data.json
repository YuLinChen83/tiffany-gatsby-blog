{"componentChunkName":"component---src-templates-post-post-jsx","path":"/blog/20220206","result":{"data":{"markdownRemark":{"html":"<p>話說原來剛畢業工作之餘 survey 的 <a href=\"/tiffany-gatsby-blog/blog/20170604\">web push notification</a> 就是 sw 的應用，雖然忘光了，趁這次的讀書會來了解並記錄一下相關內容，範例的部分之後若有機會使用上再來補充，有誤再請多指教 🙇‍♀️</p>\n<blockquote>\n<p>作為開發者，首要任務應該是確保瀏覽器快速獲取顯示交互頁面所需的最低限度的關鍵資源集</p>\n</blockquote>\n<h1>PWA</h1>\n<p>先來談談什麼是 PWA（Progressive Web Apps），其中代表 progressive enhancement，盡可能讓所有不同裝置（考量到擁有不同行為，如打字、觸控、觸控筆）、狀態的使用者都可以呈現最重要的內容與功能實現。</p>\n<p>PWA 透過各種技術及設計的優化來達到應用程式的體驗並保留網頁的優勢，藉此做到最好的使用者體驗，提出觀點如下：</p>\n<ul>\n<li><code>Progressive</code> 基本的瀏覽</li>\n<li><code>Responsive</code> 最佳化顯示</li>\n<li><code>Connectivity independent</code> 不依賴網路連接的瀏覽</li>\n<li><code>App-like</code> 瀏覽快速</li>\n<li><code>Fresh</code> 自動更新網站內容</li>\n<li><code>Safe</code> HTTPS</li>\n<li><code>Discoverable</code> SEO</li>\n<li><code>Re-engageable</code> 例如推播提升用戶回流率</li>\n<li><code>Installable</code> 可以 Add To Home 到桌面不需透過 App Store 下載安裝</li>\n<li><code>Linkable</code> 可以透過 URL 分享</li>\n</ul>\n<p><a href=\"https://youtu.be/3tb-1MWg44Y\" target=\"_blank\" rel=\"nofollow\">Build the Next Generation Mobile Web</a></p>\n<p>但並沒普及，很大原因是礙於一些作業系統的限制，例如 <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/Manifest\" target=\"_blank\" rel=\"nofollow\">Web App manifest</a>、Launching screen、Installation prompt API、Push notification、Background Sync、In-App Browser 等 PWA 重要的功能 ios 都沒有支援</p>\n<h1>Service Worker</h1>\n<h2>What</h2>\n<ul>\n<li>\n<p>Browser level，運行在不同於 main thread 的 thread 上（worker context），因此執行可以不被畫面的渲染或 block 住，並且在瀏覽器關閉時可以繼續在背景執行，但在不用時會被中止，並在下次有需要時重啟</p>\n<ul>\n<li>跟 Web worker 一樣，沒有辦法操作 DOM，且需要依賴 postMessage 來與頁面溝通</li>\n<li><a href=\"https://stackoverflow.com/questions/38632723/what-can-service-workers-do-that-web-workers-cannot\" target=\"_blank\" rel=\"nofollow\">What can service workers do that web workers cannot?</a>\n|| Web Workers | Service Workers |\n|--------------|--------------|------------------|\n| Instances | Many per tab | One for all tabs |\n| Lifespan | Same as tab | Independent |\n| Intended use | Parallelism | Offline support |</li>\n<li>如果存在需要持續保存並在重啟後加以重用的信息，Service Worker 可以訪問  <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\" target=\"_blank\" rel=\"nofollow\">IndexedDB API</a></li>\n</ul>\n</li>\n<li>\n<p>核心功能是做為瀏覽器與 network 之間的 proxy，擁有攔截使用者發出請求的能力（透過監聽 <code>fetch</code> 事件），且提供了快取的功能，可以在攔截使用者發出的請求後決定要不要回傳快取的內容\n<img src=\"https://i.imgur.com/cWQ9yUh.png\"></p>\n<ul>\n<li>Web API <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Cache\" target=\"_blank\" rel=\"nofollow\">Cache</a> 是 Request / Response object pairs，存於 browser 實踐的 long lived memory</li>\n<li>優先級別高於 HTTP Caching</li>\n<li>可以做到支持離線體驗，因此也能節省流量</li>\n<li>在 server worker cache 之前，則是以 AppCache 實踐，但問題很多</li>\n</ul>\n</li>\n<li>包括如推送通知（Push Notification ）和後台同步等功能</li>\n</ul>\n<h3>補充</h3>\n<ul>\n<li>\n<p>Cache 分為</p>\n<ul>\n<li>Client Cache - 伺服器與瀏覽器之間的快取機制，如 HTTP Caching（Browser Caching）、Service Worker Caching</li>\n<li>Server Cache（Application Cache）</li>\n<li>Networking Cache - 如 CDN caching</li>\n</ul>\n</li>\n<li>\n<p>快取的優先順序（會先到哪種 cache 找有沒有資料）<br>\n<code>memory cache -> service worker cache -> disk cache (browser cache)</code></p>\n<ul>\n<li>memory cahce 並不是所有瀏覽器都會實作的一種快取，Chrome 來說是把資源存在 RAM 中，效能比 disk cache 快，但關閉瀏覽器時就會清空</li>\n<li>在 build application 時會透過像是 webpack 的 bundler 打包時加 hash 到檔名以免在需要重要檔案時還 disk cache</li>\n<li>Service Worker Caching 可以搭配 HTTP Caching 一起使用以達到更好的體驗</li>\n</ul>\n</li>\n</ul>\n<h2>Why</h2>\n<ul>\n<li>對快取有更細粒度的控制權，可以應需求實作不同策略</li>\n<li>Cache 實現離線瀏覽功能</li>\n<li>像 Native App 一樣的推播 <a href=\"https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications?hl=en\" target=\"_blank\" rel=\"nofollow\">Push Notification</a> 功能</li>\n<li><a href=\"https://developers.google.com/web/updates/2015/12/background-sync\" target=\"_blank\" rel=\"nofollow\">Background Sync</a> 自動更新 - 網路不好時的請求依然會在接上時發出</li>\n</ul>\n<h2>How</h2>\n<ul>\n<li>只支援 HTTPS 或是 localhost 使用</li>\n<li>透過 sw 監聽的 life circle 事件來控管頁面\n<img src=\"https://developers.google.com/web/fundamentals/primers/service-workers/images/sw-lifecycle.png\"></li>\n<li>原始版 - <a href=\"https://web.dev/offline-cookbook/#serving-suggestions\" target=\"_blank\" rel=\"nofollow\">离线指南</a></li>\n<li>封裝版 - <a href=\"https://developers.google.com/web/tools/workbox/guides/get-started\" target=\"_blank\" rel=\"nofollow\">Workbox</a></li>\n</ul>\n<h1>References &#x26; Resources</h1>\n<ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10276666\" target=\"_blank\" rel=\"nofollow\">今晚，我想來點 Web 前端效能優化大補帖！ - Day18 X Service Workers Cache</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10186584\" target=\"_blank\" rel=\"nofollow\">30 天 Progressive Web App 學習筆記 - Day 03 - 30 天 Progressive Web App 學習筆記 - 什麼是 PWA?</a></li>\n<li><a href=\"https://developers.google.com/web/fundamentals/primers/service-workers\" target=\"_blank\" rel=\"nofollow\">Web Fundamentals - Service Worker</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLNYkxOF6rcIB2xHBZ7opgc2Mv009X87Hh\" target=\"_blank\" rel=\"nofollow\">Progressive Web App Training</a></li>\n</ul>","timeToRead":4,"frontmatter":{"title":"淺入淺出 Service Worker","date":"06 Feb 2022","tags":["javascript"],"path":"blog/20220206","excerpt":"簡單紀錄下關於 PWA 與 Service Worker 的觀點與主要功能。"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"blog/20210725","title":"初試 SonarQube","tags":["tool"],"excerpt":"記錄下認識的新東西。"}}},{"node":{"frontmatter":{"path":"blog/20210725-2","title":"SVGR 設置","tags":["javascript"],"excerpt":"webpack loader 以 Component 方式使用 Svg。"}}},{"node":{"frontmatter":{"path":"blog/20210110","title":"Pop Quiz","tags":["javascript"],"excerpt":"記錄踩到的陷阱題。"}}},{"node":{"frontmatter":{"path":"blog/20210109-3","title":"REST / RESTful & HTTP Methods","tags":["javascript"],"excerpt":"簡易整理。"}}},{"node":{"frontmatter":{"path":"blog/20210109","title":"Response Set-Cookie 無效","tags":["apollo"],"excerpt":"記錄個之前在和同事們弄 Side project 時犯蠢遇到的問題與解決方式。"}}},{"node":{"frontmatter":{"path":"blog/20200910","title":"Apollo Server 入門篇","tags":["apollo"],"excerpt":"快速複習去年分享的 GraphQL Schema 和 Client query 語法，並簡介如何以 Apollo Server 建立 GraphQL Server。"}}},{"node":{"frontmatter":{"path":"blog/20210109-2","title":"IntersectionObserver","tags":["javascript"],"excerpt":"公司專案有個日期連動的 scroll 優化試驗，原先是監聽 scroll。"}}},{"node":{"frontmatter":{"path":"blog/20190909","title":"Prisma - Schema, Data Model, Relations, Client","tags":["prisma"],"excerpt":"未來 Side project 可能會應用到的 SDL first 開發流程角度，簡介此可以取代傳統 ORM 的 DB toolkit。"}}},{"node":{"frontmatter":{"path":"blog/20200630","title":"Express - Authentication, Authorization and Security","tags":["security","express"],"excerpt":"簡介 Express RESTful API Server 範例中 JWT 權限、授權相關。"}}},{"node":{"frontmatter":{"path":"blog/20200518","title":"常用 NoSQL 雲端資料庫 - Part 1 MongoDB","tags":["mongodb"],"excerpt":"簡介 Relational/NoSQL database、mongoose ORM 寫 mongo CRUD API。"}}},{"node":{"frontmatter":{"path":"blog/20200527","title":"常用 NoSQL 雲端資料庫 - Part 2 Firebase","tags":["firebase"],"excerpt":"簡介 Google 提供的後端服務平臺（BaaS）中的兩種 DB，realtime database 和 cloud firestore。"}}},{"node":{"frontmatter":{"path":"blog/20191107","title":"Javascript Event loop - macro task & micro task","tags":["javascript"],"excerpt":"介紹 Event loop 容易混淆的異步任務 macro task & micro task。"}}},{"node":{"frontmatter":{"path":"blog/20191125","title":"初探 RxJS（下）","tags":["rxjs"],"excerpt":"簡介上次未完的 RxJS 剩餘角色，和介紹目前公司後台專案使用的 redux-observable。"}}},{"node":{"frontmatter":{"path":"blog/20191017","title":"初探 RxJS（上）","tags":["rxjs"],"excerpt":"簡介相關的設計模式中的 Behavioral Pattern，再介紹 RxJS（先講 Observable）"}}},{"node":{"frontmatter":{"path":"blog/20190907","title":"GraphQL & Apollo Client","tags":["apollo"],"excerpt":"簡單介紹 React Client 端如何用 Apollo 對 GraphQL Server 做資料存取操作。"}}},{"node":{"frontmatter":{"path":"blog/20190906","title":"初探 Storybook","tags":["javascript"],"excerpt":"初探這款能夠在開發前端元件或是函式庫的同時，可以快速地建立元件各種操作模式或是樣式的工具。"}}},{"node":{"frontmatter":{"path":"blog/20190906-2","title":"React Hooks - useCallback, useMemo, useRef","tags":["reactjs"],"excerpt":"JavaScript 是單執行緒、單線程的程式語言，所有的程式碼片段都會在堆疊中被執行，Web worker 相當於可讓主線程開其他 thread。"}}},{"node":{"frontmatter":{"path":"blog/20190707","title":"JavaScript HTML5 Web Worker & CRA 使用踩雷","tags":["javascript"],"excerpt":"JavaScript 是單執行緒、單線程的程式語言，所有的程式碼片段都會在堆疊中被執行，Web worker 相當於可讓主線程開其他 thread。"}}},{"node":{"frontmatter":{"path":"blog/20180521","title":"Web 常見攻擊手法","tags":["security"],"excerpt":"擁有基本的資安觀念保護好自家資料和 user 使用環境是開發人員重要的一點。"}}},{"node":{"frontmatter":{"path":"blog/20180514","title":"JavaScript 中 this 指向","tags":["javascript"],"excerpt":"簡介 this 指向的六種情況。"}}},{"node":{"frontmatter":{"path":"blog/20190108","title":"JavaScript 認識非同步 Callback, Promise, async/await","tags":["javascript"],"excerpt":"Asynchronous 非同步的不同寫法的整理筆記。"}}},{"node":{"frontmatter":{"path":"blog/20170714","title":"WebForm 使用 reCAPTCHA 驗證","tags":["asp.net"],"excerpt":"這個我不是機器人驗證一定不陌生，滿多登入畫面會看到的，剛好今天接到把圖形驗證改為 reCAPTCHA 就順手記下。"}}},{"node":{"frontmatter":{"path":"blog/20170728","title":"WebForm 註冊 JavaScript","tags":["asp.net","javascript"],"excerpt":"動態產生JS在目前公司專案中是滿常用到的小技巧，不同的用法會產生在Web Page 的不同位置而有直譯式語言的前後順序差。"}}},{"node":{"frontmatter":{"path":"blog/20170604","title":"Web App 推播通知","tags":["asp.net"],"excerpt":"隨著行動和穿載裝置的興起，推播通知 (Push Notification) 成為維繫App用戶關係相當有力的工具"}}},{"node":{"frontmatter":{"path":"blog/20170508","title":"WebForm 圖片上傳檢查","tags":["asp.net"],"excerpt":"開放上傳有可能被傳奇怪東西的風險，只檢查所看到的副檔名，謹慎來說似乎是不夠的。"}}},{"node":{"frontmatter":{"path":"blog/20170421","title":"存取遠端 EventLog","tags":["asp.net","javascript"],"excerpt":"在公司中實作一個 Event log 的查詢工具。（之後來寫了 D3 呈現查詢異常查詢的部分）"}}}]}},"pageContext":{"postPath":"blog/20220206","translations":[{"hreflang":"en","path":"/blog/20220206"}]}},"staticQueryHashes":["4097791827"]}