{"componentChunkName":"component---src-templates-post-post-jsx","path":"/blog/20170508","result":{"data":{"markdownRemark":{"html":"<p>開放上傳有可能被傳奇怪東西的風險，只檢查所看到的副檔名，謹慎來說似乎是不夠的。<br>\n看似單純的圖片檔，網頁上顯示也是正常顯示的圖片，那為什麼他有可能不只是張圖片？<br>\n可以上網查查有關「偽圖檔」、「合併圖檔」、「check file extension」之類的資訊。</p>\n<p>因為上司剛好派給我這閒閒菜鳥研究上傳檢查的任務，這邊就將今日所查所寫稍微整理一下，做個小分享。<br>\n首先準備一圖檔和壓縮檔然後開啟 cmd 到該目錄，來做一個合併圖檔 (圖+壓縮) 的例子。</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"carbon\" theme=\"monokai\" line-numbers=\"true\"  >\n          <code slot=\"code\">copy /b mypic.jpg+myfile.zip newfile.jpg</code>\n        </deckgo-highlight-code>\n<p>把生成的 newfile.jpg 的副檔名改成 .zip 就可以開出原本準備的 zip 了。<br>\n而且合併檔的大小似乎就是 jpg + zip 的大小（所以要小心異常大的圖檔）<br>\n以 ASP.NET Webform 的 FileUpload 為例，如何防止有意人士亂塞偽裝的惡意程式給你。</p>\n<p>這篇是我覺得回答最清楚的，下面程式也是大部分是當中的例子。<a href=\"http://www.blueshop.com.tw/board/FUM20041006161839LRJ/BRD20070801180408XHE/2.html\" target=\"_blank\" rel=\"nofollow\">請教判斷是否為真的圖檔的方法</a></p>\n<deckgo-highlight-code language=\"aspnet\" terminal=\"carbon\" theme=\"monokai\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;WebForm1.aspx.cs&quot; Inherits=&quot;WebApplicationTest.WebForm1&quot; %&gt;\n\n&lt;!DOCTYPE html&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n      &lt;div&gt;\n        &lt;asp:FileUpload ID=&quot;fuImage&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:Button ID=&quot;btnUpload&quot; runat=&quot;server&quot; Text=&quot;上傳&quot; OnClick=&quot;btnUpload_Click&quot; /&gt;\n        &lt;asp:Label ID=&quot;lblMessage&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n      &lt;/div&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"csharp\" terminal=\"carbon\" theme=\"monokai\" line-numbers=\"true\"  >\n          <code slot=\"code\">using System;\nusing System.Collections.Generic;\nusing System.Drawing;\nusing System.IO;\nusing System.Web;\n\nnamespace WebApplicationTest\n{\n    public partial class WebForm1 : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n        }\n\n        protected void btnUpload_Click(object sender, EventArgs e)\n        {\n            // 1. 檢查Byte: 各圖檔所要對應的Header\n            Dictionary&lt;string, byte[]&gt; imageHeader = new Dictionary&lt;string, byte[]&gt;();\n            imageHeader.Add(&quot;JPG&quot;, new byte[] { 0xFF, 0xD8, 0xFF, 0xE0 });\n            imageHeader.Add(&quot;JPEG&quot;, new byte[] { 0xFF, 0xD8, 0xFF, 0xE0 });\n            imageHeader.Add(&quot;PNG&quot;, new byte[] { 0x89, 0x50, 0x4E, 0x47 });\n            imageHeader.Add(&quot;TIF&quot;, new byte[] { 0x49, 0x49, 0x2A, 0x00 });\n            imageHeader.Add(&quot;TIFF&quot;, new byte[] { 0x49, 0x49, 0x2A, 0x00 });\n            imageHeader.Add(&quot;GIF&quot;, new byte[] { 0x47, 0x49, 0x46, 0x38 });\n            imageHeader.Add(&quot;BMP&quot;, new byte[] { 0x42, 0x4D });\n            imageHeader.Add(&quot;ICO&quot;, new byte[] { 0x00, 0x00, 0x01, 0x00 });\n\n            if (fuImage.HasFile)\n            {\n                // 取得檔案副檔名\n                string fileExt = fuImage.FileName.Substring(fuImage.FileName.LastIndexOf(&#39;.&#39;) + 1).ToUpper();\n\n                // 該副檔名應該要對應的Byte\n                byte[] tmp = imageHeader[fileExt];\n                byte[] header = new byte[tmp.Length];\n\n                // 取得Upload檔案的Header資訊\n                fuImage.FileContent.Read(header, 0, header.Length);\n\n                // 比對副檔名是否與真實檔案類型一致\n                if (CompareArray(tmp, header))\n                {\n                    lblMessage.Text = &quot;Valid .&quot; + fileExt + &quot; file.&quot;;\n                }\n                else\n                {\n                    lblMessage.Text = &quot;Invalid .&quot; + fileExt + &quot; file.&quot;;\n                }\n\n                // 指定格式存新圖(防止奇怪的合併圖檔，濾掉後面的)\n                Stream strmStream = fuImage.PostedFile.InputStream;\n                Image image = Image.FromStream(strmStream, true);\n                string exePath = AppDomain.CurrentDomain.BaseDirectory;\n                image.Save(exePath + Path.GetFileNameWithoutExtension(fuImage.FileName) + &quot;.&quot; + (new ImageFormatConverter().ConvertToString(image.RawFormat)).ToLower(), image.RawFormat);\n            }\n            else\n            {\n                lblMessage.Text = &quot;Please select image file.&quot;;\n            }\n        }\n\n        private bool CompareArray(byte[] a1, byte[] a2)\n        {\n            if (a1.Length != a2.Length)\n                return false;\n\n            for (int i = 0; i &lt; a1.Length; i++)\n            {\n                if (a1[i] != a2[i])\n                    return false;\n            }\n\n            return true;\n        }\n    }\n}</code>\n        </deckgo-highlight-code>\n<p>以上範例實驗 png + zip 的 png 光用 Header Byte 比較會是合法 Valid 的，但以指定格式來 Save 圖片似乎就會把不必要的其餘部份去掉，測試的兩例子：其實是 png 的 jpg，和其實是 png + zip 的 png 所存的都會是 png 。</p>\n<p>補充：若是使用 html input</p>\n<deckgo-highlight-code language=\"aspnet\" terminal=\"carbon\" theme=\"monokai\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n  &lt;div&gt;\n    &lt;input type=&quot;file&quot; id=&quot;myFile&quot; name=&quot;myFile&quot; /&gt;\n    &lt;asp:Button runat=&quot;server&quot; ID=&quot;btnUpload2&quot; OnClick=&quot;btnUploadClick2&quot; Text=&quot;上傳&quot; /&gt;\n    &lt;asp:Label ID=&quot;lblMessage2&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n  &lt;/div&gt;\n&lt;/form&gt;</code>\n        </deckgo-highlight-code>\n<p>C# 部分幾乎相同，但要將 HTML Input 轉成 HttpPostedFile</p>\n<deckgo-highlight-code language=\"csharp\" terminal=\"carbon\" theme=\"monokai\" line-numbers=\"true\"  >\n          <code slot=\"code\">protected void btnUploadClick2(object sender, EventArgs e)\n{\n    // 1. 檢查Byte: 各圖檔所要對應的Header\n    Dictionary&lt;string, byte[]&gt; imageHeader = new Dictionary&lt;string, byte[]&gt;();\n    imageHeader.Add(&quot;JPG&quot;, new byte[] { 0xFF, 0xD8, 0xFF, 0xE0 });\n    imageHeader.Add(&quot;JPEG&quot;, new byte[] { 0xFF, 0xD8, 0xFF, 0xE0 });\n    imageHeader.Add(&quot;PNG&quot;, new byte[] { 0x89, 0x50, 0x4E, 0x47 });\n    imageHeader.Add(&quot;TIF&quot;, new byte[] { 0x49, 0x49, 0x2A, 0x00 });\n    imageHeader.Add(&quot;TIFF&quot;, new byte[] { 0x49, 0x49, 0x2A, 0x00 });\n    imageHeader.Add(&quot;GIF&quot;, new byte[] { 0x47, 0x49, 0x46, 0x38 });\n    imageHeader.Add(&quot;BMP&quot;, new byte[] { 0x42, 0x4D });\n    imageHeader.Add(&quot;ICO&quot;, new byte[] { 0x00, 0x00, 0x01, 0x00 });\n\n    HttpPostedFile file = Request.Files[&quot;myFile&quot;];\n\n    //check file was submitted\n    if (file != null &amp;&amp; file.ContentLength &gt; 0)\n    {\n        // 取得檔案副檔名\n        string fileExt = file.FileName.Substring(file.FileName.LastIndexOf(&#39;.&#39;) + 1).ToUpper();\n\n        // 該副檔名應該要對應的Byte\n        byte[] tmp = imageHeader[fileExt];\n        byte[] header = new byte[tmp.Length];\n\n        // 取得Upload檔案的Header資訊\n        file.InputStream.Read(header, 0, header.Length);\n\n        // 比對副檔名是否與真實檔案類型一致\n        if (CompareArray(tmp, header))\n        {\n            lblMessage2.Text = &quot;Valid .&quot; + fileExt + &quot; file.&quot;;\n        }\n        else\n        {\n            lblMessage2.Text = &quot;Invalid .&quot; + fileExt + &quot; file.&quot;;\n        }\n\n        // 指定格式存新圖(防止奇怪的合併圖檔，濾掉後面的)\n        Stream strmStream = file.InputStream;\n        Image image = Image.FromStream(strmStream, true);\n        string exePath = AppDomain.CurrentDomain.BaseDirectory;\n        image.Save(exePath + Path.GetFileNameWithoutExtension(file.FileName) + &quot;.&quot; + (new ImageFormatConverter().ConvertToString(image.RawFormat)).ToLower(), image.RawFormat);\n    }\n}</code>\n        </deckgo-highlight-code>\n<p>希望能幫助到有需要的人，若有錯誤還請不吝嗇指教。 🙂</p>","timeToRead":5,"frontmatter":{"title":"WebForm 圖片上傳檢查","date":"08 May 2017","tags":["asp.net"],"path":"blog/20170508","excerpt":"開放上傳有可能被傳奇怪東西的風險，只檢查所看到的副檔名，謹慎來說似乎是不夠的。"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"blog/20210110","title":"Pop Quiz","tags":["javascript"],"excerpt":"記錄踩到的陷阱題。"}}},{"node":{"frontmatter":{"path":"blog/20210109","title":"Response Set-Cookie 無效","tags":["apollo"],"excerpt":"記錄個之前在和同事們弄 Side project 時犯蠢遇到的問題與解決方式。"}}},{"node":{"frontmatter":{"path":"blog/20210109-3","title":"REST / RESTful & HTTP Methods","tags":["javascript"],"excerpt":"簡易整理。"}}},{"node":{"frontmatter":{"path":"blog/20210109-2","title":"IntersectionObserver","tags":["javascript"],"excerpt":"公司專案有個日期連動的 scroll 優化試驗，原先是監聽 scroll。"}}},{"node":{"frontmatter":{"path":"blog/20200910","title":"Apollo Server 入門篇","tags":["apollo"],"excerpt":"快速複習去年分享的 GraphQL Schema 和 Client query 語法，並簡介如何以 Apollo Server 建立 GraphQL Server。"}}},{"node":{"frontmatter":{"path":"blog/20200630","title":"Express - Authentication, Authorization and Security","tags":["security","express"],"excerpt":"簡介 Express RESTful API Server 範例中 JWT 權限、授權相關。"}}},{"node":{"frontmatter":{"path":"blog/20190909","title":"Prisma - Schema, Data Model, Relations, Client","tags":["prisma"],"excerpt":"未來 Side project 可能會應用到的 SDL first 開發流程角度，簡介此可以取代傳統 ORM 的 DB toolkit。"}}},{"node":{"frontmatter":{"path":"blog/20200527","title":"常用 NoSQL 雲端資料庫 - Part 2 Firebase","tags":["firebase"],"excerpt":"簡介 Google 提供的後端服務平臺（BaaS）中的兩種 DB，realtime database 和 cloud firestore。"}}},{"node":{"frontmatter":{"path":"blog/20200518","title":"常用 NoSQL 雲端資料庫 - Part 1 MongoDB","tags":["mongodb"],"excerpt":"簡介 Relational/NoSQL database、mongoose ORM 寫 mongo CRUD API。"}}},{"node":{"frontmatter":{"path":"blog/20191125","title":"初探 RxJS（下）","tags":["rxjs"],"excerpt":"簡介上次未完的 RxJS 剩餘角色，和介紹目前公司後台專案使用的 redux-observable。"}}},{"node":{"frontmatter":{"path":"blog/20190906","title":"初探 Storybook","tags":["javascript"],"excerpt":"初探這款能夠在開發前端元件或是函式庫的同時，可以快速地建立元件各種操作模式或是樣式的工具。"}}},{"node":{"frontmatter":{"path":"blog/20191017","title":"初探 RxJS（上）","tags":["rxjs"],"excerpt":"簡介相關的設計模式中的 Behavioral Pattern，再介紹 RxJS（先講 Observable）"}}},{"node":{"frontmatter":{"path":"blog/20190907","title":"GraphQL & Apollo Client","tags":["apollo"],"excerpt":"簡單介紹 React Client 端如何用 Apollo 對 GraphQL Server 做資料存取操作。"}}},{"node":{"frontmatter":{"path":"blog/20190707","title":"JavaScript HTML5 Web Worker & CRA 使用踩雷","tags":["javascript"],"excerpt":"JavaScript 是單執行緒、單線程的程式語言，所有的程式碼片段都會在堆疊中被執行，Web worker 相當於可讓主線程開其他 thread。"}}},{"node":{"frontmatter":{"path":"blog/20191107","title":"Javascript Event loop - macro task & micro task","tags":["javascript"],"excerpt":"介紹 Event loop 容易混淆的異步任務 macro task & micro task。"}}},{"node":{"frontmatter":{"path":"blog/20180514","title":"JavaScript 中 this 指向","tags":["javascript"],"excerpt":"簡介 this 指向的六種情況。"}}},{"node":{"frontmatter":{"path":"blog/20180521","title":"Web 常見攻擊手法","tags":["security"],"excerpt":"擁有基本的資安觀念保護好自家資料和 user 使用環境是開發人員重要的一點。"}}},{"node":{"frontmatter":{"path":"blog/20170714","title":"WebForm 使用 reCAPTCHA 驗證","tags":["asp.net"],"excerpt":"這個我不是機器人驗證一定不陌生，滿多登入畫面會看到的，剛好今天接到把圖形驗證改為 reCAPTCHA 就順手記下。"}}},{"node":{"frontmatter":{"path":"blog/20170604","title":"Web App 推播通知","tags":["asp.net"],"excerpt":"隨著行動和穿載裝置的興起，推播通知 (Push Notification) 成為維繫App用戶關係相當有力的工具"}}},{"node":{"frontmatter":{"path":"blog/20190108","title":"JavaScript 認識非同步 Callback, Promise, async/await","tags":["javascript"],"excerpt":"Asynchronous 非同步的不同寫法的整理筆記。"}}},{"node":{"frontmatter":{"path":"blog/20170728","title":"WebForm 註冊 JavaScript","tags":["asp.net","javascript"],"excerpt":"動態產生JS在目前公司專案中是滿常用到的小技巧，不同的用法會產生在Web Page 的不同位置而有直譯式語言的前後順序差。"}}},{"node":{"frontmatter":{"path":"blog/20190906-2","title":"React Hooks - useCallback, useMemo, useRef","tags":["reactjs"],"excerpt":"JavaScript 是單執行緒、單線程的程式語言，所有的程式碼片段都會在堆疊中被執行，Web worker 相當於可讓主線程開其他 thread。"}}},{"node":{"frontmatter":{"path":"blog/20170421","title":"存取遠端 EventLog","tags":["asp.net","javascript"],"excerpt":"在公司中實作一個 Event log 的查詢工具。（之後來寫了 D3 呈現查詢異常查詢的部分）"}}}]}},"pageContext":{"postPath":"blog/20170508","translations":[{"hreflang":"en","path":"/blog/20170508"}]}},"staticQueryHashes":["4097791827"]}